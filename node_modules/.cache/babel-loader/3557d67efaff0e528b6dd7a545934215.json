{"ast":null,"code":"import _slicedToArray from \"/Users/adrianchan/Desktop/portfolio_website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/adrianchan/Desktop/portfolio_website/src/components/Contacts.js\";\n\nimport React, { useState } from 'react';\nimport emailjs from \"emailjs-com\";\nimport { useForm } from \"react-hook-form\";\n\nvar Contacts = function Contacts() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      successMessage = _useState2[0],\n      setSuccessMessage = _useState2[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var serviceID = \"service_ID\";\n  var templateID = \"template_ID\";\n  var userID = \"user_PmJ0mC32zelBwBYNEKoXL\";\n\n  var onSubmit = function onSubmit(data, r) {\n    sendEmail(serviceID, templateID, {\n      name: data.name,\n      phone: data.phone,\n      email: data.email,\n      subject: data.subject,\n      description: data.description\n    }, userID);\n    r.target.reset();\n  };\n\n  var sendEmail = function sendEmail(serviceID, templateID, variables, userID) {\n    // e.preventDefault();\n    emailjs.send(serviceID, templateID, variables, userID).then(function () {\n      setSuccessMessage(\"Form sent successfully! I'll contact you as soon as possible.\");\n    }).catch(function (err) {\n      return console.error(\"Something went wrong \".concat(err));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contacts\",\n    className: \"contacts\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Contact Me\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Please fill out the form below and I'll get back to you as soon as possible.\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"success-message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, successMessage)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-xs-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Name\",\n    name: \"name\",\n    ref: register({\n      required: \"Please enter your name\",\n      maxLength: {\n        value: 20,\n        message: \"Please enter a name with fewer than 20 characters\"\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, errors.name && errors.name.message), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"phone\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Phone Number\",\n    name: \"phone\",\n    ref: register({\n      required: \"Please add your phone number\"\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, errors.phone && errors.phone.message), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    className: \"form-control\",\n    placeholder: \"Email\",\n    name: \"email\",\n    ref: register({\n      required: \"Please provide your email\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"Invalid Email\"\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, errors.email && errors.email.message), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"subject\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Subject\",\n    name: \"subject\",\n    ref: register({\n      required: \"Oops, you forgot to add the subject.\"\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, errors.subject && errors.subject.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-xs-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"description\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Please enter your message here...\",\n    name: \"description\",\n    ref: register({\n      required: \"Please add a brief description...\"\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, errors.description && errors.description.message), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-main-offer contact-btn\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, \"Contact Me\"))))));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/adrianchan/Desktop/portfolio_website/src/components/Contacts.js"],"names":["React","useState","emailjs","useForm","Contacts","successMessage","setSuccessMessage","register","handleSubmit","errors","serviceID","templateID","userID","onSubmit","data","r","sendEmail","name","phone","email","subject","description","target","reset","variables","send","then","catch","err","console","error","required","maxLength","value","message","pattern"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport emailjs from \"emailjs-com\";\nimport { useForm } from \"react-hook-form\";\n\nconst Contacts = () => {\n    const [successMessage, setSuccessMessage] = useState(\"\");\n    const { register, handleSubmit, errors } = useForm();\n\n    const serviceID = \"service_ID\";\n    const templateID = \"template_ID\";\n    const userID = \"user_PmJ0mC32zelBwBYNEKoXL\"\n\n    const onSubmit = (data, r) => {\n        sendEmail(\n            serviceID,\n            templateID,\n            {\n                name: data.name,\n                phone: data.phone, \n                email: data.email,\n                subject: data.subject,\n                description: data.description\n            },\n            userID\n        )\n        r.target.reset();\n    }\n\n    const sendEmail = (serviceID, templateID, variables, userID) => {\n        // e.preventDefault();\n\n        emailjs.send(serviceID, templateID, variables, userID)\n            .then(() => {\n                setSuccessMessage(\"Form sent successfully! I'll contact you as soon as possible.\")\n            }).catch(err => console.error(`Something went wrong ${err}`))\n    }\n\n\n    return (\n        <div id=\"contacts\" className=\"contacts\">\n            <div className=\"text-center\">\n                <h1>Contact Me</h1>\n                <p>Please fill out the form below and I'll get back to you as soon as possible.</p>\n                <span className=\"success-message\">{successMessage}</span>\n            </div>\n            <div className=\"container\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 col-xs-12\">\n                            {/* Name Input */}\n                            <div className=\"text-center\">\n                                <input\n                                    id=\"name\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Name\"\n                                    name=\"name\"\n                                    ref={\n                                        register({\n                                            required: \"Please enter your name\",\n                                            maxLength: {\n                                                value: 20,\n                                                message: \"Please enter a name with fewer than 20 characters\"\n                                            }\n                                        })\n                                    }\n                                />\n                                <div className=\"line\"></div>\n                            </div>\n                            <span className=\"error-message\">\n                                {errors.name && errors.name.message}\n                            </span>\n                            {/* Phone Input */}\n                            <div className=\"text-center\">\n                                <input\n                                    id=\"phone\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Phone Number\"\n                                    name=\"phone\"\n                                    ref={\n                                        register({\n                                            required: \"Please add your phone number\",\n                                        })\n                                    }\n                                />\n                                <div className=\"line\"></div>\n                            </div>\n                            <span className=\"error-message\">\n                                {errors.phone && errors.phone.message}\n                            </span>\n                            {/* Email Input */}\n                            <div className=\"text-center\">\n                                <input\n                                    id=\"email\"\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"Email\"\n                                    name=\"email\"\n                                    ref={\n                                        register({\n                                            required: \"Please provide your email\",\n                                            pattern: {\n                                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                                message: \"Invalid Email\"\n                                            }\n                                        })\n                                    }\n                                />\n                                <div className=\"line\"></div>\n                            </div>\n                            <span className=\"error-message\">\n                                {errors.email && errors.email.message}\n                            </span>\n                            {/* Subject Input */}\n                            <div className=\"text-center\">\n                                <input\n                                    id=\"subject\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Subject\"\n                                    name=\"subject\"\n                                    ref={\n                                        register({\n                                            required: \"Oops, you forgot to add the subject.\",\n                                        })\n                                    }\n                                />\n                                <div className=\"line\"></div>\n                            </div>\n                            <span className=\"error-message\">\n                                {errors.subject && errors.subject.message}\n                            </span>\n                        </div>\n                        <div className=\"col-md-6 col-xs-12\">\n                            {/* Description */}\n                            <div className=\"text-center\">\n                                <textarea\n                                    id=\"description\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Please enter your message here...\"\n                                    name=\"description\"\n                                    ref={\n                                        register({\n                                            required: \"Please add a brief description...\",\n                                        })\n                                    }\n                                />\n                                <div className=\"line\"></div>\n                            </div>\n                            <span className=\"error-message\">\n                                {errors.description && errors.description.message}\n                            </span>\n                            <button className=\"btn-main-offer contact-btn\" type=\"submit\">Contact Me</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Contacts\n"]},"metadata":{},"sourceType":"module"}